services:
  postgres:
    image: postgres:${POSTGRES_TAG}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: alfresco
      POSTGRES_DB: alfresco
      PGUSER: alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:    
      - postgres-data:/var/lib/postgresql/data  
  transform-core-aio:
    image: docker.io/alfresco/alfresco-transform-core-aio:${TRANSFORM_TAG}
    environment:
      JAVA_OPTS: >-
        -Dserver.tomcat.threads.min=4        
        -Dserver.tomcat.threads.max=12
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
  alfresco:
    build:
      context: ./alfresco
      args:
        REPO_TAG: ${REPO_TAG}
        SOLR_COMMS: secret            
    environment:
      JAVA_TOOL_OPTIONS: >-
        -Dencryption.keystore.type=JCEKS
        -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
        -Dencryption.keyAlgorithm=DESede
        -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
        -Dmetadata-keystore.password=${METADATA_KEYSTORE_PASSWORD}
        -Dmetadata-keystore.aliases=metadata
        -Dmetadata-keystore.metadata.password=${METADATA_KEYSTORE_METADATA_PASSWORD}
        -Dmetadata-keystore.metadata.algorithm=DESede                
      JAVA_OPTS: >-
        -Dalfresco.host=${SERVER_NAME}
        -Dalfresco.port=8080
        -Dalfresco.protocol=http
        -Dshare.host=${SERVER_NAME}
        -Dshare.port=8080
        -Dshare.protocol=http
        -Dalfresco_user_store.adminpassword=${ADMIN_PASSWORD}
        -Ddb.password=${DB_PASSWORD}
        -Ddb.driver=org.postgresql.Driver
        -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
        -Dsolr.host=solr6
        -Dsolr.secureComms=secret
        -Dsolr.sharedSecret=${SECURE_COMMS_SECRET}
        -Dindex.subsystem.name=solr6
        -Dcsrf.filter.enabled=false
        -DlocalTransform.core-aio.url=http://transform-core-aio:8090/
        -Dmessaging.subsystem.autoStart=false
        -Drepo.event2.enabled=false
        -Ddeployment.method=DOCKER_COMPOSE
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 1m
    depends_on:
      postgres:
        condition: service_healthy
      transform-core-aio:
        condition: service_started
    volumes:    
      - alf-repo-data:/usr/local/tomcat/alf_data
      - ./alfresco/config/SearchAudit.xml:/usr/local/tomcat/shared/classes/alfresco/extension/audit/SearchAudit.xml
  solr6:
    build:
      context: ./search
      args:
        SEARCH_TAG: ${SEARCH_TAG}
        SOLR_HOSTNAME: solr6
        ALFRESCO_HOSTNAME: alfresco
        ALFRESCO_COMMS: secret
        CROSS_LOCALE: true
        CONTENT_INDEXING: true
    environment:
      SOLR_ALFRESCO_HOST: "alfresco"
      SOLR_ALFRESCO_PORT:  "8080" 
      SOLR_SOLR_HOST: "solr6"
      SOLR_SOLR_PORT: "8983"
      SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco"
      ALFRESCO_SECURE_COMMS: "secret"
      SOLR_OPTS: >-
        -Dalfresco.secureComms.secret=${SECURE_COMMS_SECRET}        
    depends_on:
      alfresco:
        condition: service_healthy
    volumes:    
      - solr-data:/opt/alfresco-search-services/data
  share:
    build:
      context: ./share
      args:
        SHARE_TAG: ${SHARE_TAG}
        SERVER_NAME: ${SERVER_NAME}
        HTTP_PORT: 8080
    environment:
      REPO_HOST: "alfresco"
      REPO_PORT: "8080"
      CSRF_FILTER_REFERER: "http://${SERVER_NAME}:8080/.*"
      CSRF_FILTER_ORIGIN: "http://${SERVER_NAME}:8080"      
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Dalfresco.protocol=http        
    depends_on: 
      alfresco:
        condition: service_healthy
  content-app:
    image: docker.io/alfresco/alfresco-content-app:${CONTENT_APP_TAG}
    environment:
      APP_BASE_SHARE_URL: "http://${SERVER_NAME}:8080/content-app/#/preview/s"
      APP_CONFIG_PLUGIN_PROCESS_SERVICE: false
    depends_on: 
      alfresco:
        condition: service_healthy
  control-center:
    image: quay.io/alfresco/alfresco-control-center:${CONTROL_CENTER_TAG}
    environment:
      APP_CONFIG_PROVIDER: "ECM"
      APP_CONFIG_AUTH_TYPE: "BASIC"
      BASE_PATH: ./
      APP_CONFIG_PLUGIN_LEGAL_HOLD: false
    depends_on: 
      alfresco:
        condition: service_healthy
  proxy:
    image: docker.io/library/nginx:stable-alpine
    deploy:
      resources:
        limits:
          cpus: '0.48'
          memory: '930m'
        reservations:
          cpus: '0.24'
          memory: '465m'
    depends_on:
      share:
        condition: service_started
      content-app:
        condition: service_started
      control-center:
        condition: service_started
      alfresco:
        condition: service_started
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf      
    ports:
      - ${BIND_IP_NGINX:-0.0.0.0}:8080:8080


volumes:
  postgres-data:
  alf-repo-data:
  solr-data:
